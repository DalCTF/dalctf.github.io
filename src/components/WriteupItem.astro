---
import { Competitions } from "../loaders/Competitions";
import { tagFor } from "../util/tags";
import Tag from "./Tag.astro";

interface Props {
  title: string;
  competitionId: string;
  tags?: string[];
  snippet?: string;
  preview?: boolean;
}

const {
  title,
  competitionId = "",
  snippet = "",
  preview = false,
} = Astro.props;

let competition = "Other";
if (competitionId != "") {
  let result = await Competitions.shared.get(competitionId);
  competition = result?.name || "Other";
}

const tags = (Astro.props.tags || []).map((tag) =>
  tagFor(tag, "border", !preview),
);
---

<div>
  <span>{competition}</span>
  <h2>{title}</h2>
  <div class="tags">
    {
      tags.map((tag) => (
        <Tag text={tag.text} color={tag.color} type={tag.type} url={tag.url} />
      ))
    }
  </div>
  <p
    set:html={snippet}
    style={{
      display: "-webkit-box",
      "-webkit-box-orient": "vertical",
      "-webkit-line-clamp": 3,
      overflow: "hidden",
    }}
  />
</div>

<style lang="scss">
  @use "../styles/variables" as *;

  div {
    flex-direction: column;
    max-width: 100%;
    display: flex;
  }

  span {
    color: $foreground-secondary-color;
  }

  h2 {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
    max-width: 100%;
    display: block;
  }

  .tags {
    flex-direction: row;
    margin-top: 8px;
    display: flex;
    gap: 8px;
  }

  p {
    margin-top: 16px;

    :global(span) {
      color: $accent-color-light;
    }
  }
</style>
