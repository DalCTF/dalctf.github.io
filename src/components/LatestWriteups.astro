---
import { getCollection, getEntry } from "astro:content";

import { summary } from "../util/markdown";
import Card from "./Card.astro";
import Preview from "./Preview.astro";
import Writeup from "./Writeup.astro";

let writeups = await getCollection("writeups");
const pairs = [];

for (let writeup of writeups) {
  const competition = await getEntry({
    collection: "competitions",
    id: writeup.data.competition,
  });

  pairs.push({ writeup, competition });
}

pairs.sort(
  (a, b) =>
    b.competition.data.dateStart.getTime() -
    a.competition.data.dateStart.getTime(),
);

writeups = pairs.slice(0, 4).map((x) => x.writeup);
---

<Preview title="Latest Writeups" url="/writeups">
  <div class="grid">
    {
      writeups.map((writeup) => (
        <Card url={"/writeups/" + writeup.data.id}>
          <Writeup
            snippet={summary(writeup.data.raw).text}
            competitionId={writeup.data.competition}
            title={writeup.data.title}
            tags={writeup.data.tags}
            preview={true}
          />
        </Card>
      ))
    }
  </div>
</Preview>

<style lang="scss">
  @use "../styles/variables" as *;

  .grid {
    grid-template-columns: 1fr 1fr;
    box-sizing: border-box;
    grid-auto-rows: 1fr;
    display: grid;
    gap: 16px;
  }

  @media screen and (max-width: $breakpoint-tablet) {
    :global(.grid a:nth-child(n + 3)) {
      display: none;
    }

    .grid {
      grid-template-columns: 1fr;
    }
  }
</style>
